# Name: knative
# Description: Deploys Latest Knative
# Url: https://github.com/istio/istio
# Required-Vars: KNATIVE_HOME
# OpenShift-Version: >=3.10.0

oc project myproject
oc adm policy add-scc-to-user privileged -z default -n myproject
oc label namespace myproject istio-injection=enabled

echo "Setting up security policy for istio"
oc adm policy add-scc-to-user anyuid -z istio-ingress-service-account -n istio-system
oc adm policy add-scc-to-user anyuid -z default -n istio-system
oc adm policy add-scc-to-user anyuid -z prometheus -n istio-system
oc adm policy add-scc-to-user anyuid -z istio-egressgateway-service-account -n istio-system
oc adm policy add-scc-to-user anyuid -z istio-citadel-service-account -n istio-system
oc adm policy add-scc-to-user anyuid -z istio-ingressgateway-service-account -n istio-system
oc adm policy add-scc-to-user anyuid -z istio-cleanup-old-ca-service-account -n istio-system
oc adm policy add-scc-to-user anyuid -z istio-mixer-post-install-account -n istio-system
oc adm policy add-scc-to-user anyuid -z istio-mixer-service-account -n istio-system
oc adm policy add-scc-to-user anyuid -z istio-pilot-service-account -n istio-system
oc adm policy add-scc-to-user anyuid -z istio-sidecar-injector-service-account -n istio-system
oc adm policy add-cluster-role-to-user cluster-admin -z istio-galley-service-account -n istio-system

echo "Installing istio"
oc apply -f #{KNATIVE_HOME}/istio.yaml

echo "Waiting for istio to become ready"
sleep 5; while echo && oc get pods -n istio-system | grep -v -E "(Running|Completed|STATUS)"; do sleep 5; done

echo "Updating sidecar-injector pod"
oc get cm istio-sidecar-injector -n istio-system -oyaml | docker exec origin sed -e 's/securityContext:/securityContext:\\n      privileged: true/' | oc replace -f -
oc delete pod -n istio-system -l istio=sidecar-injector

echo "Setting up security policy for knative"
oc adm policy add-scc-to-user anyuid -z build-controller -n knative-build
oc adm policy add-scc-to-user anyuid -z controller -n knative-serving
oc adm policy add-scc-to-user anyuid -z autoscaler -n knative-serving
oc adm policy add-scc-to-user anyuid -z kube-state-metrics -n monitoring
oc adm policy add-scc-to-user anyuid -z node-exporter -n monitoring
oc adm policy add-scc-to-user anyuid -z prometheus-system -n monitoring
oc adm policy add-cluster-role-to-user cluster-admin -z build-controller -n knative-build
oc adm policy add-cluster-role-to-user cluster-admin -z controller -n knative-serving
oc adm policy add-scc-to-user anyuid -z eventing-controller -n knative-eventing
oc adm policy add-cluster-role-to-user cluster-admin -z eventing-controller -n knative-eventing

echo "Installing Knative-serving and Knative-build components"
oc apply -f #{KNATIVE_HOME}/knative.yaml

echo "Waiting for Knative-serving to become ready"
sleep 5; while echo && oc get pods -n knative-serving | grep -v -E "(Running|Completed|STATUS)"; do sleep 5; done

echo "Waiting for Knative-build to become ready"
sleep 5; while echo && oc get pods -n knative-build | grep -v -E "(Running|Completed|STATUS)"; do sleep 5; done
